{"remainingRequest":"/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/@vuepress/core/.temp/temp-pages/v-06549946.md?vue&type=template&id=72d6313f&","dependencies":[{"path":"/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/@vuepress/core/.temp/temp-pages/v-06549946.md","mtime":1573612977441},{"path":"/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/cache-loader/dist/cjs.js","mtime":1573120645488},{"path":"/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1573120649068},{"path":"/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/cache-loader/dist/cjs.js","mtime":1573120645488},{"path":"/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/vue-loader/lib/index.js","mtime":1573120649068},{"path":"/Users/xuejiapeng/Documents/zolo/yuque-github/node_modules/@vuepress/markdown-loader/index.js","mtime":1573120646657}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}